type User @db(name: "user") {
  #  A unique identifier generated for the user and unique among all users.
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  firstName: String!
  lastName: String!
  email: String! @unique
  password: String!
  image: String
  groups: [Group!]! @relation(name: "GroupJoined")
  createdGroups: [Group!]! @relation(name: "GroupCreator")
  channels: [Channel!]! @relation(name: "ChannelJoined")
  createdChannels: [Channel!]! @relation(name: "ChannelCreator")
  messages: [Message!]!
}

type Group @db(name: "group") {
  #  A unique identifier generated for the user and unique among all meetings.
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  #User that created this group and the only one that can edit/delete it.
  creator: User! @relation(name: "GroupCreator")
  name: String! @unique
  #URL should be the name encoded
  url: String! @unique
  description: String!
  category: String!
  topics: [String!]! @scalarList(strategy: RELATION)
  image: String
  backgroundImage: String
  participants: [User!]! @relation(name: "GroupJoined")
  channels: [Channel!]!
}

type Channel @db(name: "channel") {
  #  A unique identifier generated for the user and unique among all meetings.
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  #  A unique identifier generated by the user and unique among all meetings.
  creator: User! @relation(name: "ChannelCreator")
  name: String!
  #URL should be the group url + channel name encoded
  url: String! @unique
  description: String
  participants: [User!]! @relation(name: "ChannelJoined", link: TABLE)
  messages: [Message!]!
  group: Group!
}

type Message @db(name: "message") {
  #  Generated id for a message -- read-only
  id: ID! @id
  #  The message timestamp.
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  #  The message content.
  content: String!
  #  The id of the Conversation this message belongs to. This is the table primary key.
  channel: Channel!
  author: User!
}
